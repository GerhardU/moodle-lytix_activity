{"version":3,"file":"activity.min.js","sources":["../src/activity.js"],"sourcesContent":["import Ajax from 'core/ajax';\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\nimport Widget from 'lytix_helper/widget';\nimport PercentRounder from 'lytix_helper/percent_rounder';\nimport {makeLoggingFunction} from 'lytix_logs/logs';\n\nconst d3 = window.d3;\n\nlet log; // This will be the logging function.\n\nconst activity = {\n    contextid: -1,\n    courseid: -1,\n    userid: -1,\n    svg: null,\n    margin: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    z: 0,\n    line: 0,\n    focus: null,\n    keys: null,\n    formatValue: null,\n    bisectDate: null,\n    strings: null,\n    sumUserString: '',\n    sumAverageAllStrings: '',\n    showOthers: true, // Also show all_*?\n\n    svgcontainer: null,\n\n    columns: [\n        \"average_all\", \"user_all\",\n        \"all_core\", \"user_core\",\n        \"all_forum\", \"user_forum\",\n        \"all_grade\", \"user_grade\",\n        \"all_submission\", \"user_submission\",\n        \"all_resource\", \"user_resource\",\n        \"all_quiz\", \"user_quiz\",\n        \"all_bbb\", \"user_bbb\",\n        \"date\"\n    ],\n\n    data: [],\n\n    renderGraphFail: function(ex) {\n        // eslint-disable-next-line camelcase\n        var text = activity.strings.error_text += '<p>' + ex.message + '</p>';\n        document.querySelector('#activitygraph_widget').innerHTML = text;\n    },\n\n    drawLoading: function() {\n        var img = '<img src=\"../../../pix/i/loading.gif\" ' +\n            'alt=\"LoadingImage\" style=\"width:48px;height:48px;\">';\n        var widget = document.getElementById('activitygraph_widget');\n        getString('loading_msg', 'local_lytix').done(function(loadingMsg) {\n            widget.innerHTML = img + ' ' + loadingMsg;\n        });\n        getString('sum_user', 'lytix_activity').done(function(sumUser) {\n            activity.sumUserString = sumUser;\n        });\n        getString('sum_average', 'lytix_activity').done(function(sumAverage) {\n            activity.sumAverageAllStrings = sumAverage;\n        });\n    },\n\n    // ‘format’ is an object containing a divisor and a time unit (as returned by getFormatting).\n    numberFormat: function(number, format = activity.currentFormatting) {\n        return Math.round(number / format.divisor) + ' ' + format.unit;\n    },\n\n    // Convert seconds of a category to minutes or hours.\n    reformat: function(input) {\n        const\n            keyAll = (input === \"_all\" ? \"average\" : \"all\") + input,\n            keyUser = \"user\" + input;\n\n        this.currentFormatting =\n            this.showOthers && this.formatting[keyAll] >= this.formatting[keyUser] ?\n            this.formatting[keyAll] :\n            this.formatting[keyUser];\n\n        const divisor = this.currentFormatting.divisor;\n        return this.data.map(element => {\n            return {\n                [keyAll]: element[keyAll] / divisor,\n                [keyUser]: element[keyUser] / divisor,\n                date: element.date,\n            };\n        });\n    },\n\n    update: function(input) {\n\n        var svgWidth = activity.svgcontainer.offsetWidth;\n        var svgHeight = 410;\n\n        const data = this.reformat(input);\n\n        var loadingWidget = document.getElementById('activitygraph_widget');\n        loadingWidget.innerHTML = '';\n\n        var activityGraphWidget = d3.select(\"#activitygraph_widget\");\n        activityGraphWidget.selectAll('*').remove();\n\n        activity.svg = activityGraphWidget.append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n\n        activity.margin = {top: 15, right: 35, bottom: 15, left: 35};\n        activity.width = activity.svg.attr(\"width\") - activity.margin.left;\n        activity.height = activity.svg.attr(\"height\") - activity.margin.top - activity.margin.bottom;\n\n        // Add label to y axis.\n        activity.svg.append(\"text\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"y\", 6)\n            .attr(\"x\", svgHeight / -2)\n            .attr(\"dy\", \".5em\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"font-size\", 12)\n            .text(this.currentFormatting.unit);\n\n        activity.x = d3.scaleTime()\n            .rangeRound([activity.margin.left, activity.width])\n            .domain(d3.extent(data, function(d) {\n                return d.date;\n            }));\n\n        activity.y = d3.scaleLinear()\n            .rangeRound([activity.height - activity.margin.bottom, activity.margin.top]);\n\n        activity.z = d3.scaleOrdinal(d3.schemeCategory10);\n\n        var line = d3.line()\n            .curve(d3.curveLinear)\n            .x(function(d) {\n                return activity.x(d.date);\n            })\n            .y(function(d) {\n                return activity.y(d.degrees);\n            });\n\n\n        activity.svg.append(\"g\")\n            .attr(\"class\", \"x-axis\")\n            .attr(\"transform\", \"translate(0,\" + (activity.height - activity.margin.bottom) + \")\")\n            .call(d3.axisBottom(activity.x).tickFormat(d3.timeFormat(\"%b\")));\n\n        activity.svg.append(\"g\")\n            .attr(\"class\", \"y-axis\")\n            .attr(\"transform\", \"translate(\" + activity.margin.left + \",0)\");\n\n        const focus = this.focus = activity.svg.append(\"g\")\n            .attr(\"class\", \"focus\")\n            .style(\"display\", \"none\");\n\n        focus.append(\"line\").attr(\"class\", \"lineHover\")\n            .style(\"stroke\", \"#999\")\n            .attr(\"stroke-width\", 1)\n            .style(\"shape-rendering\", \"crispEdges\")\n            .style(\"opacity\", 0.5)\n            .attr(\"y1\", -activity.height)\n            .attr(\"y2\", 0);\n\n        focus.append(\"text\").attr(\"class\", \"lineHoverDate\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", 12);\n\n        activity.svg.append(\"rect\")\n            .attr(\"class\", \"overlay\")\n            .attr(\"x\", activity.margin.left)\n            .attr(\"width\", activity.width - activity.margin.left)\n            .attr(\"height\", activity.height)\n            .attr(\"fill\", \"none\")\n            .style(\"pointer-events\", \"all\");\n\n\n        var copy = activity.keys.filter(function(f) {\n            return f.includes(input);\n        });\n\n        var cities = copy.map(function(id) {\n            return {\n                id: id,\n                values: data.map(function(d) {\n                    return {date: d.date, degrees: +d[id]};\n                })\n            };\n        });\n        var sumUserAll = 0;\n        var sumAverageAll = 0;\n\n        cities[1].values.forEach(function(d) {\n            sumUserAll += d.degrees;\n            return d;\n        });\n\n        // Undo the conversion from seconds to hours/minutes.\n        sumUserAll *= this.formatting[cities[1].id].divisor;\n\n        if (this.showOthers) {\n            cities[0].values.forEach(function(d) {\n                sumAverageAll += d.degrees;\n                return d;\n            });\n            // Undo the conversion from seconds to hours/minutes.\n            sumAverageAll *= this.formatting[cities[0].id].divisor;\n        }\n\n        // Delete others’ entries.\n        if (!this.showOthers) {\n            cities.shift();\n            copy.shift();\n        }\n\n        var sumContainer = document.getElementById('activitygraph_sum');\n\n        var innerHTML = '<div class=\"d-inline-block pr-4\" style=\"font-family: sans-serif; font-size: 14px;\">'\n            + activity.sumUserString\n            + activity.numberFormat(sumUserAll, this.getFormatting(sumUserAll));\n        if (this.showOthers) {\n            innerHTML += \"/ \"\n            + activity.sumAverageAllStrings\n            + activity.numberFormat(sumAverageAll, this.getFormatting(sumAverageAll));\n        }\n        innerHTML += '</div>';\n\n        sumContainer.innerHTML = innerHTML;\n        activity.y.domain([\n            d3.min(cities, function(d) {\n                return d3.min(d.values, function(c) {\n                    return c.degrees;\n                });\n            }),\n            d3.max(cities, function(d) {\n                return d3.max(d.values, function(c) {\n                    return c.degrees;\n                });\n            })\n        ]).nice();\n\n\n        activity.svg.selectAll(\".y-axis\")\n            .call(d3.axisLeft(activity.y)\n                .tickSize(-activity.width + activity.margin.left));\n\n        var city = activity.svg.selectAll(\".cities\")\n            .data(cities);\n\n        city.exit().remove();\n\n        city.enter().insert(\"g\", \".focus\").append(\"path\")\n            .attr(\"class\", \"line cities\")\n            .style(\"stroke\", function(d) {\n                return activity.z(d.id);\n            })\n            .merge(city)\n            .attr(\"d\", function(d) {\n                return line(d.values);\n            })\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke-width\", \"1.5px\")\n            .attr(\"opacity\", 0.75);\n\n\n        activity.tooltip(copy);\n    },\n\n    tooltip: function(copy) {\n        const focus = this.focus;\n        var labels = focus.selectAll(\".lineHoverText\")\n            .data(copy);\n\n        labels.enter().append(\"text\")\n            .attr(\"class\", \"lineHoverText\")\n            .style(\"fill\", function(d) {\n                return activity.z(d);\n            })\n            .attr(\"text-anchor\", \"start\")\n            .attr(\"font-size\", 12)\n            .attr(\"dy\", function(_, i) {\n                return 1 + i * 2 + \"em\";\n            })\n            .style(\"text-shadow\", \"-2px -2px 0 #fff, 2px -2px 0 #fff, -2px 2px 0 #fff, 2px 2px 0 #fff\")\n            .merge(labels);\n\n        var circles = focus.selectAll(\".hoverCircle\")\n            .data(copy);\n\n        circles.enter().append(\"circle\")\n            .attr(\"class\", \"hoverCircle\")\n            .style(\"fill\", function(d) {\n                return activity.z(d);\n            })\n            .style(\"opacity\", 0.75)\n            .attr(\"r\", 2.5)\n            .merge(circles);\n\n        activity.svg.selectAll(\".overlay\")\n            .on(\"mouseover\", function() {\n                focus.style(\"display\", null);\n            })\n            .on(\"mouseout\", function() {\n                focus.style(\"display\", \"none\");\n            })\n            .on(\"mousemove\", mousemove);\n\n        /**\n         * A callback function for an event listener.\n         */\n        function mousemove() {\n            var x0 = activity.x.invert(d3.pointer(event)[0]),\n                i = activity.bisectDate(activity.data, x0, 1),\n                d0 = activity.data[i - 1];\n            var d1;\n            if (activity.data.length > 1) {\n                d1 = activity.data[i];\n            } else {\n                d1 = d0;\n            }\n            var d = x0 - d0.date > d1.date - x0 ? d1 : d0;\n\n            var formatDate = d3.timeFormat(\"%Y-%m-%d\");\n\n            focus.select(\".lineHover\")\n                .attr(\"transform\", \"translate(\" + activity.x(d.date) + \",\" + activity.height + \")\");\n\n            focus.select(\".lineHoverDate\")\n                .attr(\"transform\",\n                    \"translate(\" + activity.x(d.date) + \",\" + (activity.height + activity.margin.bottom) + \")\")\n                .text(formatDate(d.date));\n\n            focus.selectAll(\".hoverCircle\")\n                .attr(\"cy\", function(e) {\n                    return activity.y(d[e]);\n                })\n                .attr(\"cx\", activity.x(d.date));\n\n\n            focus.selectAll(\".lineHoverText\")\n                .attr(\"transform\",\n                    \"translate(\" + (activity.x(d.date)) + \",\" + activity.height / 2.5 + \")\")\n                .text(function(e) {\n                        return activity.strings[e] +\n                            \" \" + activity.numberFormat(d[e]);\n                });\n\n            if (activity.x(d.date) > (activity.width - activity.width / 4)) {\n                focus.selectAll(\"text.lineHoverText\")\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"dx\", -10);\n            } else {\n                focus.selectAll(\"text.lineHoverText\")\n                    .attr(\"text-anchor\", \"start\")\n                    .attr(\"dx\", 10);\n            }\n        }\n    },\n\n    chart: function(data) {\n\n        activity.svgcontainer = document.getElementById('activitygraph_widget');\n\n        activity.keys = activity.columns.slice(0);\n\n        activity.bisectDate = d3.bisector(function(d) {\n            return d.date;\n        }).left;\n        activity.formatValue = d3.format(\",.0f\");\n\n        var parseTime = d3.timeParse(\"%Y%m%d\");\n        data.forEach(function(d) {\n            d.date = parseTime(d.date);\n            return d;\n        });\n\n        activity.update(document.getElementById('activitygraph_selectbox').value);\n    },\n\n    // Get divisor and time unit to convert seconds to either minutes or hours.\n    getFormatting: function(seconds) {\n        const\n            spm = 60, // Seconds per minute.\n            sph = 3600, // Seconds per hour.\n            formatting = {\n                unit: undefined,\n                divisor: undefined,\n            };\n        if (seconds > spm && seconds < sph) {\n            formatting.unit = activity.strings.m;\n            formatting.divisor = spm;\n        } else if (seconds > sph) {\n            formatting.unit = activity.strings.h;\n            formatting.divisor = sph;\n        } else {\n            formatting.unit = activity.strings.s;\n            formatting.divisor = 1;\n        }\n        return formatting;\n    },\n};\n\nexport const init = async(contextid, courseid, userid) => {\n    activity.contextid = contextid;\n    activity.courseid = courseid;\n    activity.userid = userid;\n\n    activity.strings = await Widget.getStrings({\n        lytix_activity: { // eslint-disable-line camelcase\n            identical: [\n                \"average_all\",\n                \"user_all\",\n                \"all_core\",\n                \"user_core\",\n                \"all_forum\",\n                \"user_forum\",\n                \"all_grade\",\n                \"user_grade\",\n                \"all_submission\",\n                \"user_submission\",\n                \"all_resource\",\n                \"user_resource\",\n                \"all_quiz\",\n                \"user_quiz\",\n                \"all_bbb\",\n                \"user_bbb\",\n                \"error_text\",\n                \"no_activities_found\",\n                \"h\",\n                \"m\",\n                \"s\"\n            ],\n        }\n    });\n\n    activity.drawLoading();\n\n    const\n        selectBox = document.getElementById('activitygraph_selectbox'),\n        showOthersBox = document.getElementById('show-others'),\n        chartChooser = document.getElementById('activity-chart-chooser'),\n        barCharts = document.getElementById('activity-bar-charts'),\n        barChartOthers = barCharts.querySelector('.others'),\n        lineGraph = document.getElementById('activity-line-graph');\n\n    // Perform ajax call.\n    const dataPromise = Ajax.call([{\n        methodname: 'local_lytix_lytix_activity_logs_get',\n        args: {\n            contextid: contextid,\n            courseid: courseid,\n            userid: userid,\n        },\n    }])[0]\n    .then(function(response) {\n        showOthersBox.checked = activity.showOthers = response.ShowOthers;\n        if (activity.showOthers) {\n            barChartOthers.classList.remove('d-none');\n        }\n        if (document.getElementById('show-line-graph').checked) {\n            lineGraph.classList.remove('d-none');\n            barCharts.classList.add('d-none');\n        } // Per default the other chart is visible.\n\n        activity.medianTimes = response.MedianTimes;\n        if (response.data.length) {\n            activity.data = response.data;\n            activity.data.columns = activity.columns;\n            const\n                keys = activity.columns.slice(0, -1), // Exclude date.\n                keyCount = keys.length;\n\n            // Determine which category needs which unit of time.\n            {\n                activity.formatting = {};\n\n                // First, figure out the highest amount of seconds per category.\n                const maxTimes = {};\n                for (let i = activity.data.length - 1; i >= 0; --i) {\n                    const entry = activity.data[i];\n                    for (let j = 0; j < keyCount; ++j) {\n                        const key = keys[j];\n                        if (entry[key] > (maxTimes[key] ?? 0)) {\n                            maxTimes[key] = entry[key];\n                        }\n                    }\n                }\n                for (let i = 0; i < keyCount; ++i) {\n                    const\n                        key = keys[i],\n                        time = maxTimes[key];\n                    activity.formatting[key] = activity.getFormatting(time);\n                }\n            }\n\n            activity.chart(activity.data);\n\n            // XXX This has to be redeclared, otherwise its value mysteriously is an integer;\n            // this is probably a side-effect of minimising.\n            const selectBox = document.getElementById('activitygraph_selectbox');\n\n            selectBox.addEventListener('change', function() {\n                activity.update(this.value);\n                // Slicing gets rid of leading underscore.\n                log('SELECT', 'ACTIVITY', this.value.slice(1));\n            });\n\n            let resizeTimer;\n            new ResizeObserver(() => {\n                clearTimeout(resizeTimer);\n                resizeTimer = setTimeout(function() {\n                    activity.update(selectBox.value);\n                }, 110);\n            }).observe(lineGraph);\n        } else {\n            activity.renderGraphFail(activity.strings.no_activities_found);\n        }\n        return;\n    }).fail(function(ex) {\n        activity.renderGraphFail(ex);\n    });\n\n    // Render stacked bar charts.\n    {\n        const stringPromise = Widget.getStrings({\n            lytix_activity: { // eslint-disable-line camelcase\n                differing: {\n                    Navigation: 'core',\n                    Quiz: 'quiz',\n                    Video: 'video',\n                    Grade: 'grade',\n                    Forum: 'forum',\n                    Resource: 'resource',\n                    Submission: 'submission',\n                    noData: 'nodata',\n                    descriptionMe: 'description_me',\n                    descriptionOthers: 'description_others',\n                },\n            },\n        });\n\n        log = makeLoggingFunction(userid, courseid, contextid, 'activity');\n\n        Promise.all([stringPromise, dataPromise]).then(values => {\n            const\n                strings = values[0],\n                times = activity.medianTimes,\n                length = times.length,\n                rounder = new PercentRounder();\n\n            const renderBarChart = target => {\n                const view = {\n                    description: {text: strings['description' + target]},\n                    data: [],\n                };\n                for (let i = 0; i < length; ++i) {\n                    const\n                        entry = times[i],\n                        time = entry[target];\n                    if (time <= 0) {\n                        continue;\n                    }\n                    view.data.push({\n                        activity: entry.Type.toLowerCase(),\n                        label: strings[entry.Type],\n                        percent: rounder.round(time * 100),\n                    });\n                }\n                rounder.reset();\n                if (view.data.length === 0) {\n                    view.data.push({\n                        label: strings.noData,\n                        percent: 100,\n                    });\n                }\n                return Templates.render('lytix_timeoverview/timeoverview', view)\n                .then(html => {\n                    barCharts.querySelector('.' + target.toLowerCase()).innerHTML = html;\n                    return;\n                });\n            };\n            return Promise.all([\n                renderBarChart('Me'),\n                renderBarChart('Others')\n            ]);\n        })\n        .finally(() => {\n            barCharts.classList.remove('loading');\n        })\n        .catch(() => {\n            barCharts.innerHTML = activity.strings.error_text; // eslint-disable-line camelcase\n        });\n    }\n\n    // Set up controls for choosing the type of chart and toggling others.\n    {\n        const lineGraphSelected = barCharts.classList.contains('d-none');\n        chartChooser.addEventListener('change', () => {\n            lineGraph.classList.toggle('d-none');\n            barCharts.classList.toggle('d-none');\n            log('SELECT', 'CHART', lineGraphSelected ? 'time per day' : 'aggregated');\n        });\n\n        showOthersBox.addEventListener('change', e => {\n            const checked = e.target.checked;\n            Ajax.call([{\n                methodname: 'local_lytix_lytix_activity_toggle_others',\n                args: {\n                    userid: userid,\n                    courseid: courseid,\n                    contextid: contextid,\n                    showothers: checked,\n                },\n            }]);\n            activity.showOthers = checked;\n            activity.update(selectBox.value);\n            if (checked) {\n                barChartOthers.classList.remove('d-none');\n                log('SHOW', 'OTHERS');\n            } else {\n                barChartOthers.classList.add('d-none');\n                log('HIDE', 'OTHERS');\n            }\n        });\n    }\n};\n"],"names":["d3","window","log","activity","contextid","courseid","userid","svg","margin","width","height","x","y","z","line","focus","keys","formatValue","bisectDate","strings","sumUserString","sumAverageAllStrings","showOthers","svgcontainer","columns","data","renderGraphFail","ex","text","error_text","message","document","querySelector","innerHTML","drawLoading","widget","getElementById","done","loadingMsg","img","sumUser","sumAverage","numberFormat","number","format","currentFormatting","Math","round","divisor","unit","reformat","input","keyAll","keyUser","this","formatting","map","element","date","update","svgWidth","offsetWidth","activityGraphWidget","select","selectAll","remove","append","attr","top","right","bottom","left","svgHeight","scaleTime","rangeRound","domain","extent","d","scaleLinear","scaleOrdinal","schemeCategory10","curve","curveLinear","degrees","call","axisBottom","tickFormat","timeFormat","style","copy","filter","f","includes","cities","id","values","sumUserAll","sumAverageAll","forEach","shift","sumContainer","getFormatting","min","c","max","nice","axisLeft","tickSize","city","exit","enter","insert","merge","tooltip","labels","_","i","circles","on","d1","x0","invert","pointer","event","d0","length","formatDate","e","chart","slice","bisector","parseTime","timeParse","value","seconds","undefined","m","h","s","async","Widget","getStrings","lytix_activity","identical","selectBox","showOthersBox","chartChooser","barCharts","barChartOthers","lineGraph","dataPromise","Ajax","methodname","args","then","response","checked","ShowOthers","classList","add","medianTimes","MedianTimes","keyCount","maxTimes","entry","j","key","time","resizeTimer","addEventListener","ResizeObserver","clearTimeout","setTimeout","observe","no_activities_found","fail","stringPromise","differing","Navigation","Quiz","Video","Grade","Forum","Resource","Submission","noData","descriptionMe","descriptionOthers","Promise","all","times","rounder","PercentRounder","renderBarChart","target","view","description","push","Type","toLowerCase","label","percent","reset","Templates","render","html","finally","catch","lineGraphSelected","contains","toggle","showothers"],"mappings":"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"}